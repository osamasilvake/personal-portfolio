# name: Continuous Integration & Deployment

# on:
#     push:
#         branches:
#             - master
#     pull_request:
#         branches:
#             - master

# jobs:
#     lint:
#         runs-on: ubuntu-latest

#         steps:
#             - name: Checkout Code
#               uses: actions/checkout@v4

#             - name: Setup Node.js
#               uses: actions/setup-node@v4
#               with:
#                   node-version: 22

#             - name: Cache node_modules
#               uses: actions/cache@v4
#               with:
#                   path: node_modules
#                   key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
#                   restore-keys: |
#                       ${{ runner.os }}-yarn-cache-

#             - name: Install Dependencies
#               run: yarn install

#             - name: Run ESLint
#               run: yarn lint:es

#             - name: Run Prettier Check
#               run: yarn pretty:check

#     test:
#         needs: lint # Ensure linting is done before testing
#         runs-on: ubuntu-latest

#         steps:
#             - name: Checkout Code
#               uses: actions/checkout@v4

#             - name: Setup Node.js
#               uses: actions/setup-node@v4
#               with:
#                   node-version: 22

#             - name: Cache node_modules
#               uses: actions/cache@v4
#               with:
#                   path: node_modules
#                   key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
#                   restore-keys: |
#                       ${{ runner.os }}-yarn-cache-

#             - name: Install Dependencies
#               run: yarn install

#             - name: Run Tests
#               run: yarn test

#     deploy:
#         needs: test # Ensure testing is done before deployment
#         runs-on: ubuntu-latest

#         steps:
#             - name: Checkout Code
#               uses: actions/checkout@v4

#             - name: Setup Node.js
#               uses: actions/setup-node@v4
#               with:
#                   node-version: 22

#             - name: Cache node_modules
#               uses: actions/cache@v4
#               with:
#                   path: node_modules
#                   key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
#                   restore-keys: |
#                       ${{ runner.os }}-yarn-cache-

#             - name: Install Dependencies
#               run: yarn install

#             - name: Build the App
#               run: yarn build

#             - name: Deploy to Vercel
#               uses: amondnet/vercel-action@v25
#               with:
#                   vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
#                   vercel-args: '--prod'
#                   vercel-org-id: ${{ secrets.VERCEL_ORG_ID }} # Required, your team ID
#                   vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }} # Required

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    setup:
        runs-on: ubuntu-latest
        outputs:
            node_modules-cache: ${{ steps.cache-node-modules.outputs.cache-hit }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Cache node_modules
              id: cache-node-modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-cache-

            - name: Install Dependencies
              if: steps.cache-node-modules.outputs.cache-hit != 'true'
              run: yarn install

    lint:
        runs-on: ubuntu-latest
        needs: setup

        steps:
            - name: Run ESLint
              run: yarn lint:es

            - name: Run Prettier Check
              run: yarn pretty:check

    test:
        runs-on: ubuntu-latest
        needs: [setup, lint]

        steps:
            - name: Run Tests
              run: yarn test

    deploy:
        runs-on: ubuntu-latest
        needs: [setup, test]

        steps:
            - name: Build the App
              run: yarn build

            - name: Deploy to Vercel
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-args: '--prod'
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
