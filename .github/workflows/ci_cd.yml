name: Continuous Integration & Deployment

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    # Reusable job for caching and installing dependencies
    setup:
        runs-on: ubuntu-latest
        outputs:
            node_modules-path: node_modules # Makes node_modules available to other jobs
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Cache node_modules
              id: yarn-cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-cache-

            - name: Install Dependencies
              if: steps.yarn-cache.outputs.cache-hit != 'true'
              run: yarn install

    # Lint job depends on setup job
    lint:
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Run ESLint
              run: yarn lint

            - name: Run Prettier Check
              run: yarn pretty:check

    # Test job depends on setup and lint
    test:
        needs: [setup, lint]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Run Tests
              run: yarn test

    # Deploy job depends on setup and test
    deploy:
        needs: [setup, test]
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master'
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Build the App
              run: yarn build

            - name: Deploy to Vercel
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-args: '--prod'
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
