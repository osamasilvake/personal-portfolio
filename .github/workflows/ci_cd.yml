name: Continuous Integration & Deployment

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    # Lint Job: Install dependencies, lint code, and upload compressed `node_modules`
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Cache Yarn Cache
              uses: actions/cache@v4
              with:
                  path: ~/.cache/yarn
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install Dependencies
              run: yarn install

            - name: Run Prettier Check
              run: yarn pretty:check

            - name: Compress node_modules
              run: zip -r node_modules.zip node_modules

            - name: Upload node_modules as artifact
              uses: actions/upload-artifact@v3
              with:
                  name: node_modules
                  path: node_modules.zip

    # Test Job: Download and unzip `node_modules` artifact, verify dependencies, and run tests
    test:
        needs: lint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Download node_modules artifact
              uses: actions/download-artifact@v3
              with:
                  name: node_modules
                  path: .

            - name: Unzip node_modules
              run: unzip node_modules.zip

            - name: Verify and Install Missing Dependencies
              run: yarn install --frozen-lockfile

            - name: Run Tests
              run: yarn test

    # Deploy Job: Download `node_modules` artifact, build, and deploy
    deploy:
        needs: test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master'
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Download node_modules artifact
              uses: actions/download-artifact@v3
              with:
                  name: node_modules
                  path: node_modules

            - name: Build the App
              run: yarn build

            - name: Deploy to Vercel
              uses: amondnet/vercel-action@v25
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
                  vercel-args: '--prod'
                  vercel-org-id: ${{ secrets.VERCEL_ORG_ID }} # Required, your team ID
                  vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }} # Required
